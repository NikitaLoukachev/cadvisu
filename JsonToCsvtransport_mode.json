{"paragraphs":[{"text":"import org.apache.spark.sql.{DataFrame, SparkSession}\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport java.io.File","user":"anonymous","dateUpdated":"2018-01-31T10:31:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.{DataFrame, SparkSession}\nimport org.apache.log4j.Logger\nimport org.apache.log4j.Level\nimport java.io.File\n"}]},"apps":[],"jobName":"paragraph_1517300924652_-369633746","id":"20180125-142223_645739549","dateCreated":"2018-01-30T08:28:44+0000","dateStarted":"2018-01-31T10:31:17+0000","dateFinished":"2018-01-31T10:31:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4643"},{"text":"Logger.getLogger(\"org\").setLevel(Level.ERROR)\nLogger.getLogger(\"akka\").setLevel(Level.ERROR)\n\nval spark = SparkSession\n  .builder()\n  .appName(\"Spark SQL basic example\")\n  .config(\"spark.master\", \"local\")\n  .getOrCreate()\n\n\ndef getListOfFile(dir: String): List[String] = {\n  val d = new File(dir)\n  if (d.exists && d.isDirectory) {\n    var res = d.listFiles.filter(_.isFile).toList\n    res = res.filter(_.getName.endsWith(\".json\"))\n    res.map(_.toString)\n  } else {\n    List[String]()\n  }\n}\n\ndef getJson(x: String): Unit = {\n  spark.read.json(x)\n}\n\ndef HaversineDistance(lat1:Double, lon1:Double, lat2:Double, lon2:Double) : Double = {\n    val AVERAGE_RADIUS_OF_EARTH_KM = 6371\n    \n    val latDistance = Math.toRadians(lat1 - lat2)\n    val lonDistance = Math.toRadians(lon1 - lon2)\n    \n    val sinLat = Math.sin(latDistance / 2)\n    val sinLon = Math.sin(lonDistance / 2)\n    \n    val a = sinLat * sinLat +\n      (Math.cos(Math.toRadians(lat1))\n        * Math.cos(Math.toRadians(lat2))\n        * sinLon * sinLon)\n    \n    val c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n    \n    return (AVERAGE_RADIUS_OF_EARTH_KM * c)\n    }\n\nval HaversineDistanceUdf = udf(HaversineDistance _)\n\n\ndef exportToCsv(x: DataFrame, exportDirectory: String): Unit = {\n  x.repartition(1)\n    .write\n    .mode(\"overwrite\")\n    .option(\"header\", \"true\")\n    .csv(exportDirectory)\n}\n","user":"anonymous","dateUpdated":"2018-01-31T10:31:32+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"spark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@6857469c\ngetListOfFile: (dir: String)List[String]\ngetJson: (x: String)Unit\nHaversineDistance: (lat1: Double, lon1: Double, lat2: Double, lon2: Double)Double\nHaversineDistanceUdf: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function4>,DoubleType,Some(List(DoubleType, DoubleType, DoubleType, DoubleType)))\nexportToCsv: (x: org.apache.spark.sql.DataFrame, exportDirectory: String)Unit\n"}]},"apps":[],"jobName":"paragraph_1517300924663_-360015024","id":"20180125-142301_2036030206","dateCreated":"2018-01-30T08:28:44+0000","dateStarted":"2018-01-31T10:31:32+0000","dateFinished":"2018-01-31T10:31:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4644"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1517301204126_2099326781","id":"20180130-083324_1222353753","dateCreated":"2018-01-30T08:33:24+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4645"},{"text":"//reading json df\nval jsonPath: String = \"/home/pythonadmuser/Desktop/local_cadvisu/json/transport_mode/*\"\nval csvPath: String = \"/home/pythonadmuser/Desktop/local_cadvisu/csv/\"\n","user":"anonymous","dateUpdated":"2018-01-31T10:33:16+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"jsonPath: String = /home/pythonadmuser/Desktop/local_cadvisu/json/transport_mode/*\ncsvPath: String = /home/pythonadmuser/Desktop/local_cadvisu/csv/\n"}]},"apps":[],"jobName":"paragraph_1517300924664_-361938768","id":"20180125-143046_1090039923","dateCreated":"2018-01-30T08:28:44+0000","dateStarted":"2018-01-31T10:33:16+0000","dateFinished":"2018-01-31T10:33:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4646"},{"text":"def exportToCsv(x: DataFrame, exportDirectory: String): Unit = {\n  x.repartition(1)\n    .write\n    .mode(\"append\")\n    .option(\"header\", \"true\")\n    .csv(exportDirectory)\n}\n\nval df = spark.read.json(jsonPath)\nprintln(df.count, df.columns.size)\n    \nval df1 = df.drop(\"score\", \"job_step\")\nval df2 = df1.withColumn(\"beginLat_beginLong_endLat_endLon_distance_km\", HaversineDistanceUdf(df1(\"beginLat\"), df1(\"beginLong\"), df1(\"endLat\"), df1(\"endLong\")))\n    \nexportToCsv(df2, csvPath+\"transport_mode/\")\n\n/*\nfor(e <- jsonFile) {\n    val df = spark.read.json(e)\n    println(df.count, df.columns.size)\n    \n    val df1 = df.drop(\"score\")\n    val df2 = df1.withColumn(\"beginLat_beginLong_endLat_endLon_distance_km\", HaversineDistanceUdf(df1(\"beginLat\"), df1(\"beginLong\"), df1(\"endLat\"), df1(\"endLong\")))\n    \n    exportToCsv(df2, csvPath+\"transport_mode/\")\n}\n*/\n","user":"anonymous","dateUpdated":"2018-01-31T10:46:25+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"exportToCsv: (x: org.apache.spark.sql.DataFrame, exportDirectory: String)Unit\ndf: org.apache.spark.sql.DataFrame = [beginLat: double, beginLong: double ... 17 more fields]\n(3964481,19)\ndf1: org.apache.spark.sql.DataFrame = [beginLat: double, beginLong: double ... 15 more fields]\ndf2: org.apache.spark.sql.DataFrame = [beginLat: double, beginLong: double ... 16 more fields]\n"}]},"apps":[],"jobName":"paragraph_1517305972241_1423325656","id":"20180130-095252_1448687703","dateCreated":"2018-01-30T09:52:52+0000","dateStarted":"2018-01-31T10:46:25+0000","dateFinished":"2018-01-31T10:47:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4647"},{"text":"\ndf2.printSchema()","user":"anonymous","dateUpdated":"2018-01-31T10:41:01+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- beginLat: double (nullable = true)\n |-- beginLong: double (nullable = true)\n |-- beginStationName: string (nullable = true)\n |-- beginStationUIC: long (nullable = true)\n |-- beginTime: string (nullable = true)\n |-- codeEchange: string (nullable = true)\n |-- computationMethod: string (nullable = true)\n |-- endLat: double (nullable = true)\n |-- endLong: double (nullable = true)\n |-- endStationName: string (nullable = true)\n |-- endStationUIC: long (nullable = true)\n |-- endTime: string (nullable = true)\n |-- genericTransportMode: string (nullable = true)\n |-- indexSegment: string (nullable = true)\n |-- specificTransportMode: string (nullable = true)\n |-- trajectoryWKT: string (nullable = true)\n |-- userId: string (nullable = true)\n |-- beginLat_beginLong_endLat_endLon_distance_km: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1517300924670_-362708266","id":"20180126-125523_1271527735","dateCreated":"2018-01-30T08:28:44+0000","dateStarted":"2018-01-31T10:41:01+0000","dateFinished":"2018-01-31T10:41:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4648"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1517395281242_866159995","id":"20180131-104121_1981517620","dateCreated":"2018-01-31T10:41:21+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:4649"},{"text":"df2.select(df2(\"job_step\")).distinct.show()","user":"anonymous","dateUpdated":"2018-01-31T10:39:47+0000","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+\n|      job_step|\n+--------------+\n|transport_mode|\n+--------------+\n\n"}]},"apps":[],"jobName":"paragraph_1517300924670_-362708266","id":"20180125-145207_722329235","dateCreated":"2018-01-30T08:28:44+0000","dateStarted":"2018-01-31T10:39:47+0000","dateFinished":"2018-01-31T10:39:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4650"},{"text":"var s = Set(df2.select(\"job_step\"))\nprintln(s)","user":"anonymous","dateUpdated":"2018-01-31T10:37:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"s: scala.collection.immutable.Set[org.apache.spark.sql.DataFrame] = Set([job_step: string])\nSet([job_step: string])\n"}]},"apps":[],"jobName":"paragraph_1517300924670_-362708266","id":"20180125-145722_300453410","dateCreated":"2018-01-30T08:28:44+0000","dateStarted":"2018-01-31T10:37:06+0000","dateFinished":"2018-01-31T10:37:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4651"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1517394996532_313262146","id":"20180131-103636_1611485285","dateCreated":"2018-01-31T10:36:36+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:4652"}],"name":"JsonToCsvtransport_mode","id":"2D78Y1UJ4","angularObjects":{"2D5R26EDC:shared_process":[],"2D49QQE1Z:shared_process":[],"2D4AXB7EJ:shared_process":[],"2D57383AK:shared_process":[],"2D5Q1RJ4S:shared_process":[],"2D58DZSCU:shared_process":[],"2D419R7MY:shared_process":[],"2D5FNWST2:shared_process":[],"2D5TJPR66:shared_process":[],"2D5FDCGT3:shared_process":[],"2D5VCE5FZ:shared_process":[],"2D39NPP6R:shared_process":[],"2D5H94SSD:shared_process":[],"2D6DB69DE:shared_process":[],"2D6GU6UMQ:shared_process":[],"2D61RHCTA:shared_process":[],"2D42RXKJA:shared_process":[],"2D3W4SNNJ:shared_process":[],"2D6GHKSWC:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}